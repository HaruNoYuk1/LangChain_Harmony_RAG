您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。XML概述 更新时间: 2024-03-20 16:30 毫无帮助帮助不大一般很好非常好
分享
 XML（可扩展标记语言）是一种用于描述数据的标记语言，旨在提供一种通用的方式来传输和存储数据，特别是Web应用程序中经常使用的数据。XML并不预定义标记。因此，XML更加灵活，并且可以适用于广泛的应用领域。 XML文档由元素（element）、属性（attribute）和内容（content）组成。 元素指的是标记对，包含文本、属性或其他元素。 属性提供了有关元素的其他信息。 内容则是元素包含的数据或子元素。  XML还可以通过使用XML Schema或DTD（文档类型定义）来定义文档结构。这些机制允许开发人员创建自定义规则以验证XML文档是否符合其预期的格式。 XML还支持命名空间、实体引用、注释、处理指令等特性，使其能够灵活地适应各种数据需求。 语言基础类库提供了XML相关的基础能力，包括：XML的生成、XML的解析和XML的转换。  上一篇 XML生成、解析与转换 下一篇 XML生成 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。注意事项解析XML标签和标签值解析XML属性和属性值解析XML事件类型和元素深度场景示例XML解析 更新时间: 2024-03-20 16:30 毫无帮助帮助不大一般很好非常好
分享
 对于以XML作为载体传递的数据，实际使用中需要对相关的节点进行解析，一般包括解析XML标签和标签值、解析XML属性和属性值、解析XML事件类型和元素深度三类场景。 XML模块提供XmlPullParser类对XML文件解析，输入为含有XML文本的ArrayBuffer或DataView，输出为解析得到的信息。 表1 XML解析选项 名称  类型  必填  说明    supportDoctype  boolean  否  是否忽略文档类型。默认为false，表示对文档类型进行解析。   ignoreNameSpace  boolean  否  是否忽略命名空间。默认为false，表示对命名空间进行解析。   tagValueCallbackFunction  (name: string, value: string) => boolean  否  获取tagValue回调函数，打印标签及标签值。默认为null，表示不进行XML标签和标签值的解析。   attributeValueCallbackFunction  (name: string, value: string) => boolean  否  获取attributeValue回调函数， 打印属性及属性值。默认为null，表示不进行XML属性和属性值的解析。   tokenValueCallbackFunction  (eventType: EventType, value: ParseInfo) => boolean  否  获取tokenValue回调函数，打印标签事件类型及parseInfo对应属性。默认为null，表示不进行XML事件类型解析。     注意事项XML解析及转换需要确保传入的XML数据符合标准格式。 XML解析目前不支持按指定节点解析对应的节点值。   解析XML标签和标签值引入模块。 已复制import xml from '@ohos.xml';import util from '@ohos.util'; // 需要使用util模块函数对文件编码 对XML文件编码后调用XmlPullParser。 可以基于ArrayBuffer构造XmlPullParser对象， 也可以基于DataView构造XmlPullParser对象。 已复制let strXml =  '<?xml version="1.0" encoding="utf-8"?>' +    '<note importance="high" logged="true">' +    '<title>Play</title>' +    '<lens>Work</lens>' +    '</note>';let textEncoder = new util.TextEncoder();let arrBuffer = textEncoder.encodeInto(strXml); // 对数据编码，防止包含中文字符乱码// 1.基于ArrayBuffer构造XmlPullParser对象let that = new xml.XmlPullParser(arrBuffer.buffer, 'UTF-8');
// 2.基于DataView构造XmlPullParser对象let dataView = new DataView(arrBuffer.buffer);let that = new xml.XmlPullParser(dataView, 'UTF-8'); 自定义回调函数，本例直接打印出标签及标签值。 已复制let str = '';function func(name, value){  str = name + value;  console.info(str);  return true; //true:继续解析 false:停止解析} 设置解析选项，调用parse函数。 已复制let options = {supportDoctype:true, ignoreNameSpace:true, tagValueCallbackFunction:func};that.parse(options); 输出结果如下所示： 已复制notetitlePlaytitlelensWorklensnote   解析XML属性和属性值引入模块。 已复制import xml from '@ohos.xml';import util from '@ohos.util'; // 需要使用util模块函数对文件编码 对XML文件编码后调用XmlPullParser。 已复制let strXml =  '<?xml version="1.0" encoding="utf-8"?>' +    '<note importance="high" logged="true">' +    '    <title>Play</title>' +    '    <title>Happy</title>' +    '    <lens>Work</lens>' +    '</note>';let textEncoder = new util.TextEncoder();let arrBuffer = textEncoder.encodeInto(strXml); // 对数据编码，防止包含中文字符乱码let that = new xml.XmlPullParser(arrBuffer.buffer, 'UTF-8'); 自定义回调函数，本例直接打印出属性及属性值。 已复制let str = '';function func(name, value){  str += name + ' ' + value + ' ';  return true; // true:继续解析 false:停止解析} 设置解析选项，调用parse函数。 已复制let options = {supportDoctype:true, ignoreNameSpace:true, attributeValueCallbackFunction:func};that.parse(options);console.info(str); // 一次打印出所有的属性及其值 输出结果如下所示： 已复制importance high logged true // note节点的属性及属性值   解析XML事件类型和元素深度引入模块。 已复制import xml from '@ohos.xml';import util from '@ohos.util'; // 需要使用util模块函数对文件编码 对XML文件编码后调用XmlPullParser。 已复制let strXml =  '<?xml version="1.0" encoding="utf-8"?>' +  '<note importance="high" logged="true">' +  '<title>Play</title>' +  '</note>';let textEncoder = new util.TextEncoder();let arrBuffer = textEncoder.encodeInto(strXml); // 对数据编码，防止包含中文字符乱码let that = new xml.XmlPullParser(arrBuffer.buffer, 'UTF-8'); 自定义回调函数，本例直接打印元素事件类型及元素深度。 已复制let str = '';function func(name, value){  str = name + ' ' + value.getDepth(); // getDepth 获取元素的当前深度  console.info(str)  return true; //true:继续解析 false:停止解析} 设置解析选项，调用parse函数。 已复制let options = {supportDoctype:true, ignoreNameSpace:true, tokenValueCallbackFunction:func};that.parse(options); 输出结果如下所示： 已复制0 0 // 0：<?xml version="1.0" encoding="utf-8"?> 对应事件类型START_DOCUMENT值为0  0：起始深度为02 1 // 2：<note importance="high" logged="true"> 对应事件类型START_TAG值为2       1：深度为12 2 // 2：<title>对应事件类型START_TAG值为2                                       2：深度为24 2 // 4：Play对应事件类型TEXT值为4                                               2：深度为23 2 // 3：</title>对应事件类型END_TAG值为3                                        2：深度为23 1 // 3：</note>对应事件类型END_TAG值为3                                         1：深度为1（与<note对应>）1 0 // 1：对应事件类型END_DOCUMENT值为1                                           0：深度为0   场景示例此处以调用所有解析选项为例，提供解析XML标签、属性和事件类型的开发示例。 已复制import xml from '@ohos.xml';import util from '@ohos.util';
let strXml =  '<?xml version="1.0" encoding="UTF-8"?>' +    '<book category="COOKING">' +    '<title lang="en">Everyday</title>' +    '<author>Giada</author>' +    '</book>';let textEncoder = new util.TextEncoder();let arrBuffer = textEncoder.encodeInto(strXml);let that = new xml.XmlPullParser(arrBuffer.buffer, 'UTF-8');let str = '';
function tagFunc(name, value) {  str = name + value;  console.info('tag-' + str);  return true;}
function attFunc(name, value) {  str = name + ' ' + value;  console.info('attri-' + str);  return true;}
function tokenFunc(name, value) {  str = name + ' ' + value.getDepth();  console.info('token-' + str);  return true;}
let options = {  supportDocType: true,  ignoreNameSpace: true,  tagValueCallbackFunction: tagFunc,  attributeValueCallbackFunction: attFunc,  tokenValueCallbackFunction: tokenFunc};that.parse(options); 输出结果如下所示： 已复制tag-token-0 0tag-bookattri-category COOKINGtoken-2 1tag-titleattri-lang entoken-2 2tag-Everydaytoken-4 2tag-titletoken-3 2tag-authortoken-2 2tag-Giadatoken-4 2tag-authortoken-3 2tag-booktoken-3 1tag-token-1 0   上一篇 XML生成 下一篇 XML转换 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。加解密算法库框架 更新时间: 2024-03-20 16:30 毫无帮助帮助不大一般很好非常好
分享
    加解密算法库框架概述  加解密算法库框架开发指导   上一篇 通用密钥库密码算法规格 下一篇 加解密算法库框架概述 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。常见组件开发指导 更新时间: 2024-03-20 16:30 毫无帮助帮助不大一般很好非常好
分享
    容器组件  基础组件  Canvas开发指导  栅格布局  Svg开发指导   上一篇 页面路由 下一篇 容器组件 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。应用配置文件（FA模型） 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
    应用配置文件概述（FA模型）  app对象内部结构  deviceConfig内部结构  module对象内部结构   上一篇 module.json5配置文件 下一篇 应用配置文件概述（FA模型） 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。