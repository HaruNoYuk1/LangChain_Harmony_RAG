您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块TreeSet属性constructorisEmptyhasgetFirstValuegetLastValueaddremovegetLowerValuegetHigherValuepopFirstpopLastclearvaluesforEachentries[Symbol.iterator]@ohos.util.TreeSet (非线性容器TreeSet) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 TreeSet基于TreeMap实现，在TreeSet中，只对value对象进行处理。TreeSet可用于存储一系列值的集合，元素中value唯一且有序。 TreeSet和HashSet相比，HashSet中的数据无序存放，而TreeSet是有序存放。它们集合中的元素都不允许重复，但HashSet允许放入null值，TreeSet不建议插入空值，可能会影响排序结果。 推荐使用场景： 一般需要存储有序集合的场景，可以使用TreeSet。 文档中存在泛型的使用，涉及以下泛型标记符: T: Type, 类 
说明
本模块首批接口从API version 8开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import TreeSet from '@ohos.util.TreeSet';    TreeSet 属性系统能力： SystemCapability.Utils.Lang 名称  类型  可读  可写  说明    length  number  是  否  TreeSet的元素个数。      constructorconstructor(comparator?: (firstValue: T, secondValue: T) => boolean) TreeSet的构造函数，支持通过比较函数对元素进行升序或降序排序。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    comparator  function  否  用户自定义的比较函数，可通过比较关系对元素进行排序。默认值为hole（一个空白占位符），表示不提供比较函数。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200012  The TreeSet's constructor cannot be directly invoked.     示例： 已复制let treeSet = new TreeSet();//使用comparator firstValue < secondValue，表示期望结果为升序排序。反之firstValue > secondValue，表示为降序排序。let treeSet : TreeSet<string> = new TreeSet<string>((firstValue: string, secondValue: string) : boolean => {return firstValue < secondValue});treeSet.add("a");treeSet.add("c");treeSet.add("d");treeSet.add("b");let numbers = Array.from(treeSet.values())for (let item of numbers) {  console.log("TreeSet:" + item);}  isEmptyisEmpty(): boolean 判断该容器是否为空。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  boolean  为空返回true，不为空返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The isEmpty method cannot be bound.     示例： 已复制const treeSet = new TreeSet();let result = treeSet.isEmpty();  hashas(value: T): boolean 判断此容器中是否含有该指定元素。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    value  T  是  指定元素。     返回值：  类型  说明  boolean  包含指定元素返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The has method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.has(123);treeSet.add(123);let result1 = treeSet.has(123);  getFirstValuegetFirstValue(): T 获取容器中排序第一的数据，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  T  返回排序第一的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getFirstValue method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");let result = treeSet.getFirstValue();  getLastValuegetLastValue(): T 获取容器中排序最后的数据，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  T  返回排序最后的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getLastValue method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");let result = treeSet.getLastValue();  addadd(value: T): boolean 向容器中添加一组数据。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    value  T  是  添加的成员数据。     返回值：  类型  说明  boolean  成功添加新数据至容器返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The add method cannot be bound.     示例： 已复制let treeSet = new TreeSet();let result = treeSet.add("squirrel");  removeremove(value: T): boolean 删除指定的元素。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    value  T  是  指定的元素。     返回值：  类型  说明  boolean  成功删除元素返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The remove method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");let result = treeSet.remove("sparrow");  getLowerValuegetLowerValue(key: T): T 获取容器中比传入元素排序靠前一位的元素，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  T  是  对比的元素值。     返回值：  类型  说明  T  返回排序中对比元素前一位的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getLowerValue method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");treeSet.add("gander");let result = treeSet.getLowerValue("sparrow");  getHigherValuegetHigherValue(key: T): T 获取容器中比传入元素排序靠后一位的元素，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  T  是  对比的元素。     返回值：  类型  说明  T  返回排序中传入元素后一位的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getHigherValue method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");treeSet.add("gander");let result = treeSet.getHigherValue("sparrow");  popFirstpopFirst(): T 删除容器中排序最前的数据，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  T  返回删除的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The popFirst method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");let result = treeSet.popFirst();  popLastpopLast(): T 删除容器中排序最后的数据，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  T  返回删除的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The popLast method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");let result = treeSet.popLast();  clearclear(): void 清除容器中的所有元素，并把length置为0。 系统能力： SystemCapability.Utils.Lang 错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The clear method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");treeSet.clear();  valuesvalues(): IterableIterator<T> 返回包含此映射中键值的新迭代器对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<T>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The values method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");let iter = treeSet.values();let temp = iter.next().value;while(temp != undefined) {  console.log("value:" + temp);  temp = iter.next().value;}  forEachforEach(callbackFn: (value?: T, key?: T, set?: TreeSet<T>) => void, thisArg?: Object): void 通过回调函数来遍历实例对象上的元素以及元素对应的下标。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    callbackFn  function  是  回调函数。   thisArg  Object  否  callbackFn被调用时用作this值。     callbackFn的参数说明： 参数名  类型  必填  说明    value  T  否  当前遍历到的value元素。   key  T  否  当前遍历到的key元素。   set  TreeSet<T>  否  当前调用forEach方法的实例对象。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The forEach method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("sparrow");treeSet.add("gull");treeSet.forEach((value, key) => {    console.log("value:" + value, "key:" + key);});  entriesentries(): IterableIterator<[T, T]> 返回包含此映射中键值对的新迭代器对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<[T, T]>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The entries method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");let iter = treeSet.entries();let temp = iter.next().value;while(temp != undefined) {  console.log("key:" + temp[0]);  console.log("value:" + temp[1]);  temp = iter.next().value;}  [Symbol.iterator][Symbol.iterator](): IterableIterator<T> 返回一个迭代器，迭代器的每一项都是一个JavaScript对象，并返回该对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<T>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The Symbol.iterator method cannot be bound.     示例： 已复制let treeSet = new TreeSet();treeSet.add("squirrel");treeSet.add("sparrow");  // 使用方法一：for (let item of treeSet) {   console.log("value:" + item);}
// 使用方法二：let iter = treeSet[Symbol.iterator]();let temp = iter.next().value;while(temp != undefined) {  console.log("value:" + temp);  temp = iter.next().value;}   上一篇 @ohos.util.TreeMap (非线性容器TreeMap) 下一篇 @ohos.util.Vector (线性容器Vector) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。