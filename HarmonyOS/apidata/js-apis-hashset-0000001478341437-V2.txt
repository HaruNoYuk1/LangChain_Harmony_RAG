您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块HashSet属性constructorisEmptyhasaddremoveclearvaluesforEachentries[Symbol.iterator]@ohos.util.HashSet (非线性容器HashSet) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
说明
本模块首批接口从API version 8开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 HashSet基于HashMap实现。在HashSet中，只对value对象进行处理。 HashSet和TreeSet相比，HashSet中的数据无序存放，即存放元素的顺序和取出的顺序不一致，而TreeSet是有序存放。它们集合中的元素都不允许重复，但HashSet允许放入null值，TreeSet不建议插入空值，可能会影响排序结果。 推荐使用场景： 可以利用HashSet不重复的特性，当需要不重复的集合或需要去重某个集合的时候使用。 文档中存在泛型的使用,涉及以下泛型标记符: T: Type, 类 导入模块已复制import HashSet from '@ohos.util.HashSet';  HashSet 属性系统能力： SystemCapability.Utils.Lang 名称  类型  可读  可写  说明    length  number  是  否  HashSet的元素个数。     示例： 已复制let hashSet = new HashSet();hashSet.add(1);hashSet.add(2);hashSet.add(3);hashSet.add(4);hashSet.add(5);let res = hashSet.length;  constructorconstructor() HashSet的构造函数。 系统能力： SystemCapability.Utils.Lang 错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200012  The HashSet's constructor cannot be directly invoked.     示例： 已复制let hashSet = new HashSet();  isEmptyisEmpty(): boolean 判断该HashSet是否为空。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  boolean  为空返回true，不为空返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The isEmpty method cannot be bound.     示例： 已复制const hashSet = new HashSet();let result = hashSet.isEmpty();  hashas(value: T): boolean 判断此HashSet中是否含有该指定元素。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    value  T  是  指定元素。     返回值：  类型  说明  boolean  包含指定元素返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The has method cannot be bound.     示例： 已复制let hashSet = new HashSet();let result = hashSet.has("squirrel");hashSet.add("squirrel");let result1 = hashSet.has("squirrel");  addadd(value: T): boolean 向HashSet中添加数据。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    value  T  是  添加成员数据。     返回值：  类型  说明  boolean  成功增加元素返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The add method cannot be bound.     示例： 已复制let hashSet = new HashSet();let result = hashSet.add("squirrel");  removeremove(value: T): boolean 删除指定的元素。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    value  T  是  指定删除的元素。     返回值：  类型  说明  boolean  成功删除指定元素返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The remove method cannot be bound.     示例： 已复制let hashSet = new HashSet();hashSet.add("squirrel");hashSet.add("sparrow");let result = hashSet.remove("sparrow");  clearclear(): void 清除HashSet中的所有元素，并把length置为0。 系统能力： SystemCapability.Utils.Lang 错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The clear method cannot be bound.     示例： 已复制let hashSet = new HashSet();hashSet.add("squirrel");hashSet.add("sparrow");hashSet.clear();  valuesvalues(): IterableIterator<T> 返回包含此映射中包含的键值的新迭代器对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<T>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The values method cannot be bound.     示例： 已复制let hashSet = new HashSet();hashSet.add("squirrel");hashSet.add("sparrow");let iter = hashSet.values();let temp = iter.next().value;while(temp != undefined) {  console.log("value:" + temp);  temp = iter.next().value;}  forEachforEach(callbackFn: (value?: T, key?: T, set?: HashSet<T>) => void, thisArg?: Object): void 通过回调函数来遍历实例对象上的元素以及元素对应的下标。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    callbackFn  function  是  回调函数。   thisArg  Object  否  callbackfn被调用时用作this值。     callbackfn的参数说明： 参数名  类型  必填  说明    value  T  否  当前遍历到的元素键值对的值。   key  T  否  当前遍历到的元素键值对的值（和value相同）。   set  HashSet<T>  否  当前调用forEach方法的实例对象。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The forEach method cannot be bound.     示例： 已复制let hashSet = new HashSet();hashSet.add("sparrow");hashSet.add("squirrel");hashSet.forEach((value, key) => {    console.log("value:" + value, "key:" + key);});  entriesentries(): IterableIterator<[T, T]> 返回包含此映射中包含的键值对的新迭代器对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<[T, T]>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The entries method cannot be bound.     示例： 已复制let hashSet = new HashSet();hashSet.add("squirrel");hashSet.add("sparrow");let iter = hashSet.entries();let temp = iter.next().value;while(temp != undefined) {  console.log("key:" + temp[0]);  console.log("value:" + temp[1]);  temp = iter.next().value;}  [Symbol.iterator][Symbol.iterator](): IterableIterator<T> 返回一个迭代器，迭代器的每一项都是一个 JavaScript 对象，并返回该对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<T>  返回一个迭代器     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The Symbol.iterator method cannot be bound.     示例： 已复制let hashSet = new HashSet();hashSet.add("squirrel");hashSet.add("sparrow");
// 使用方法一：for (let item of hashSet) {   console.log("value: " + item);}
// 使用方法二：let iter = hashSet[Symbol.iterator]();let temp = iter.next().value;while(temp != undefined) {  console.log("value: " + temp);  temp = iter.next().value;}   上一篇 @ohos.util.HashMap (非线性容器HashMap) 下一篇 @ohos.util.LightWeightMap (非线性容器LightWeightMap) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。