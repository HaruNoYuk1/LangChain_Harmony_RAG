您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块appManager.isRunningInStabilityTest8+appManager.isRunningInStabilityTest8+appManager.isRamConstrainedDeviceappManager.isRamConstrainedDeviceappManager.getAppMemorySizeappManager.getAppMemorySizeappManager.getProcessRunningInfos(deprecated)appManager.getProcessRunningInfos(deprecated)@ohos.application.appManager (appManager) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 appManager模块提供App管理的能力，包括查询当前是否处于稳定性测试场景、查询是否为ram受限设备、获取应用程序的内存大小、获取有关运行进程的信息等。 
说明
本模块首批接口从API version 7 开始支持，从API version 9废弃，替换模块为@ohos.app.ability.appManager。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import app from '@ohos.application.appManager';  appManager.isRunningInStabilityTest8+static isRunningInStabilityTest(callback: AsyncCallback<boolean>): void 查询当前是否处于稳定性测试场景。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 参数： 参数名  类型  必填  说明    callback  AsyncCallback<boolean>  是  返回当前是否处于稳定性测试场景。     示例： 已复制import app from '@ohos.application.appManager';app.isRunningInStabilityTest((err, flag) => {    console.log('startAbility result:' + JSON.stringify(err));});  appManager.isRunningInStabilityTest8+static isRunningInStabilityTest(): Promise<boolean> 查询当前是否处于稳定性测试场景。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<boolean>  返回当前是否处于稳定性测试场景。     示例： 已复制import app from '@ohos.application.appManager';app.isRunningInStabilityTest().then((flag) => {    console.log('success:' + JSON.stringify(flag));}).catch((error) => {    console.log('failed:' + JSON.stringify(error));});  appManager.isRamConstrainedDeviceisRamConstrainedDevice(): Promise<boolean>; 查询是否为ram受限设备。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<boolean>  是否为ram受限设备。     示例： 已复制app.isRamConstrainedDevice().then((data) => {    console.log('success:' + JSON.stringify(data));}).catch((error) => {    console.log('failed:' + JSON.stringify(error));});  appManager.isRamConstrainedDeviceisRamConstrainedDevice(callback: AsyncCallback<boolean>): void; 查询是否为ram受限设备。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 参数： 参数名  类型  必填  说明    callback  AsyncCallback<boolean>  是  返回当前是否是ram受限设备。     示例： 已复制app.isRamConstrainedDevice((err, data) => {    console.log('startAbility result failed:' + JSON.stringify(err));    console.log('startAbility result success:' + JSON.stringify(data));});  appManager.getAppMemorySizegetAppMemorySize(): Promise<number>; 获取应用程序的内存大小。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<number>  应用程序内存大小, 单位为M。     示例： 已复制app.getAppMemorySize().then((data) => {    console.log('success:' + JSON.stringify(data));}).catch((error) => {    console.log('failed:' + JSON.stringify(error));});  appManager.getAppMemorySizegetAppMemorySize(callback: AsyncCallback<number>): void; 获取应用程序的内存大小。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 参数： 参数名  类型  必填  说明    callback  AsyncCallback<number>  是  应用程序内存大小, 单位为M。     示例： 已复制app.getAppMemorySize((err, data) => {    console.log('startAbility result failed :' + JSON.stringify(err));    console.log('startAbility result success:' + JSON.stringify(data));});  appManager.getProcessRunningInfos(deprecated)getProcessRunningInfos(): Promise<Array<ProcessRunningInfo>>; 获取有关运行进程的信息。 从 API Version 9 开始废弃，建议使用appManager.getRunningProcessInformation9+替代。 需要权限：ohos.permission.GET_RUNNING_INFO 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<Array<ProcessRunningInfo>>  获取有关运行进程的信息。     示例： 已复制app.getProcessRunningInfos().then((data) => {    console.log('success:' + JSON.stringify(data));}).catch((error) => {    console.log('failed:' + JSON.stringify(error));});  appManager.getProcessRunningInfos(deprecated)getProcessRunningInfos(callback: AsyncCallback<Array<ProcessRunningInfo>>): void; 获取有关运行进程的信息。 从 API Version 9 开始废弃，建议使用appManager.getRunningProcessInformation9+替代。 需要权限：ohos.permission.GET_RUNNING_INFO 系统能力：SystemCapability.Ability.AbilityRuntime.Core 参数： 参数名  类型  必填  说明    callback  AsyncCallback<Array<ProcessRunningInfo>>  是  获取有关运行进程的信息。     示例： 已复制app.getProcessRunningInfos((err, data) => {    console.log('startAbility result failed :' + JSON.stringify(err));    console.log('startAbility result success:' + JSON.stringify(data));});   上一篇 @ohos.application.abilityDelegatorRegistry (AbilityDelegatorRegistry) 下一篇 @ohos.application.Configuration (Configuration) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。