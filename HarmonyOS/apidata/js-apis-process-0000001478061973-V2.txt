您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块属性EventListenerprocess.isIsolatedProcess8+process.is64Bit8+process.getStartRealtime8+process.getPastCpuTime8+process.abortprocess.uptimeprocess.kill(deprecated)process.exit(deprecated)process.getUidForName(deprecated)process.getThreadPriority(deprecated)process.isAppUid(deprecated)process.getSystemConfig(deprecated)process.getEnvironmentVar(deprecated)ProcessManager9+isAppUid9+getUidForName9+getThreadPriority9+getSystemConfig9+getEnvironmentVar9+exit9+kill9+@ohos.process (获取进程相关的信息) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 获取进程相关的信息，提供进程管理的相关功能。 
说明
本模块首批接口从API version 7开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import process from '@ohos.process';  属性系统能力： SystemCapability.Utils.Lang 名称  类型  可读  可写  说明    uid  number  是  否  进程的用户标识。   pid  number  是  否  当前进程的pid。   tid8+  number  是  否  当前线程的tid。      EventListener系统能力： SystemCapability.Utils.Lang  名称  说明  EventListener = (evt:  Object) => void  用户存储的事件。      process.isIsolatedProcess8+isIsolatedProcess(): boolean 判断进程是否被隔离。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  boolean  返回判断结果，true表示进程被隔离，false表示未被隔离。     示例： 已复制let result = process.isIsolatedProcess();  process.is64Bit8+is64Bit(): boolean 判断运行环境是否64位。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  boolean  返回判断结果，如果为64位环境返回true，否则返回false。     示例： 已复制let result = process.is64Bit();  process.getStartRealtime8+getStartRealtime(): number 获取从系统启动到进程启动所经过的实时时间（以毫秒为单位）。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  number  返回经过的实时时间。单位：毫秒     示例： 已复制let realtime = process.getStartRealtime();  process.getPastCpuTime8+getPastCpuTime(): number 获取进程启动到当前时间的CPU时间（以毫秒为单位）。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  number  返回经过的CPU时间。单位：毫秒     示例： 已复制let result = process.getPastCpuTime() ;  process.abortabort(): void 该方法会导致进程立即退出并生成一个核心文件，谨慎使用。 系统能力： SystemCapability.Utils.Lang 示例： 已复制process.abort();  process.uptimeuptime(): number 获取当前系统已运行的秒数。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  number  当前系统已运行的秒数。     示例： 已复制let time = process.uptime();  process.kill(deprecated)kill(signal: number, pid: number): boolean 发送signal到指定的进程，结束指定进程。 
说明
从API version 7开始支持，从API version 9开始废弃，建议使用kill9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    signal  number  是  发送的信号。   pid  number  是  进程的id。     返回值：  类型  说明  boolean  信号是否发送成功。     示例： 已复制let pres = process.pidlet result = process.kill(28, pres)  process.exit(deprecated)exit(code: number): void 终止程序。 请谨慎使用此接口，此接口调用后应用会退出，如果入参非0会产生数据丢失或者异常情况。 
说明
从API version 7开始支持，从API version 9开始废弃，建议使用exit9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    code  number  是  进程的退出码。     示例： 已复制process.exit(0);  process.getUidForName(deprecated)getUidForName(v: string): number 通过进程名获取进程uid。 
说明
从API version 8开始支持，从API version 9开始废弃，建议使用getUidForName9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    v  string  是  进程名。     返回值：  类型  说明  number  返回进程uid。     示例： 已复制let pres = process.getUidForName("tool")  process.getThreadPriority(deprecated)getThreadPriority(v: number): number 根据指定的tid获取线程优先级。 
说明
从API version 8开始支持，从API version 9开始废弃，建议使用getThreadPriority9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    v  number  是  指定的线程tid。     返回值：  类型  说明  number  返回线程的优先级。     示例： 已复制let tid = process.tid;let pres = process.getThreadPriority(tid);  process.isAppUid(deprecated)isAppUid(v: number): boolean 判断uid是否属于应用程序。 
说明
从API version 8开始支持，从API version 9开始废弃，建议使用isAppUid9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    v  number  是  应用程序的uid。     返回值：  类型  说明  boolean  返回判断结果，如果为应用程序的uid返回true，否则返回false。     示例： 已复制let result = process.isAppUid(688);  process.getSystemConfig(deprecated)getSystemConfig(name: number): number 获取系统配置信息。 
说明
从API version 8开始支持，从API version 9开始废弃，建议使用getSystemConfig9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    name  number  是  指定系统配置参数名。     返回值：  类型  说明  number  返回系统配置信息。     示例： 已复制let _SC_ARG_MAX = 0let pres = process.getSystemConfig(_SC_ARG_MAX)  process.getEnvironmentVar(deprecated)getEnvironmentVar(name: string): string 获取环境变量对应的值。 
说明
从API version 8开始支持，从API version 9开始废弃，建议使用getEnvironmentVar9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    name  string  是  环境变量名。     返回值：  类型  说明  string  返回环境变量名对应的value。     示例： 已复制let pres = process.getEnvironmentVar("PATH")  ProcessManager9+提供用于新增进程的抛异常接口。 通过自身的构造来获取ProcessManager对象。  isAppUid9+isAppUid(v: number): boolean 判断uid是否属于当前应用程序。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    v  number  是  应用程序的uid。     返回值：  类型  说明  boolean  返回判断结果，如果为应用程序的uid返回true，否则返回false。     示例： 已复制let pro = new process.ProcessManager();let result = pro.isAppUid(688);  getUidForName9+getUidForName(v: string): number 通过进程名获取进程uid。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    v  string  是  进程名。     返回值：  类型  说明  number  返回进程uid。     示例： 已复制let pro = new process.ProcessManager();let pres = pro .getUidForName("tool");  getThreadPriority9+getThreadPriority(v: number): number 根据指定的tid获取线程优先级。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    v  number  是  指定的线程tid。     返回值：  类型  说明  number  返回线程的优先级。     示例： 已复制let pro = new process.ProcessManager();let tid = process.tid;let pres = pro.getThreadPriority(tid);  getSystemConfig9+getSystemConfig(name: number): number 获取系统配置信息。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    name  number  是  指定系统配置参数名。     返回值：  类型  说明  number  返回系统配置信息。     示例： 已复制let pro = new process.ProcessManager();let _SC_ARG_MAX = 0;let pres = pro.getSystemConfig(_SC_ARG_MAX);  getEnvironmentVar9+getEnvironmentVar(name: string): string 获取环境变量对应的值。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    name  string  是  环境变量名。     返回值：  类型  说明  string  返回环境变量名对应的值。     示例： 已复制let pro = new process.ProcessManager();let pres = pro.getEnvironmentVar("PATH");  exit9+exit(code: number): void 终止程序。 请谨慎使用此接口，此接口调用后应用会退出，如果入参非0会产生数据丢失或者异常情况。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    code  number  是  进程的退出码。     示例： 已复制let pro = new process.ProcessManager();pro.exit(0);  kill9+kill(signal: number, pid: number): boolean 发送signal到指定的进程，结束指定进程。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    signal  number  是  发送的信号。   pid  number  是  进程的id。     返回值：  类型  说明  boolean  信号是否发送成功。     示例： 已复制let pro = new process.ProcessManager();let pres = process.pid;let result = pro.kill(28, pres);   上一篇 @ohos.convertxml (xml转换JavaScript) 下一篇 @ohos.taskpool（使用任务池） 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。