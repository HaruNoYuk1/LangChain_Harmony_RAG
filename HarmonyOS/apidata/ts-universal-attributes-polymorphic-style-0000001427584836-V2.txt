您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。属性StateStyles接口说明示例多态样式 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 设置组件不同状态下的样式。 
说明
从API Version 8开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。 
 属性 名称  参数类型  描述    stateStyles  StateStyles  设置组件不同状态的样式。 从API version 9开始，该接口支持在ArkTS卡片中使用。      StateStyles接口说明从API version 9开始，该接口支持在ArkTS卡片中使用。 只支持通用属性。 名称  类型  必填  描述    normal  ()=>void  否  组件无状态时的样式。   pressed  ()=>void  否  组件按下状态的样式。   disabled  ()=>void  否  组件禁用状态的样式。   focused  ()=>void  否  组件获焦状态的样式。   clicked  ()=>void  否  组件点击状态的样式。      示例已复制// xxx.ets@Entry@Componentstruct StyleExample {  @State isEnable: boolean = true
  @Styles pressedStyles() {    .backgroundColor("#ED6F21")    .borderRadius(10)    .borderStyle(BorderStyle.Dashed)    .borderWidth(2)    .borderColor("#33000000")    .width(120)    .height(30)    .opacity(1)  }
  @Styles disabledStyles() {    .backgroundColor("#E5E5E5")    .borderRadius(10)    .borderStyle(BorderStyle.Solid)    .borderWidth(2)    .borderColor("#2a4c1919")    .width(90)    .height(25)    .opacity(1)  }
  @Styles normalStyles() {    .backgroundColor("#0A59F7")    .borderRadius(10)    .borderStyle(BorderStyle.Solid)    .borderWidth(2)    .borderColor("#33000000")    .width(100)    .height(25)    .opacity(1)  }
  build() {    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center }) {      Text("normal")        .fontSize(14)        .fontColor(Color.White)        .opacity(0.5)        .stateStyles({          normal: this.normalStyles,        })        .margin({ bottom: 20 })        .textAlign(TextAlign.Center)      Text("pressed")        .backgroundColor("#0A59F7")        .borderRadius(20)        .borderStyle(BorderStyle.Dotted)        .borderWidth(2)        .borderColor(Color.Red)        .width(100)        .height(25)        .opacity(1)        .fontSize(14)        .fontColor(Color.White)        .stateStyles({          pressed: this.pressedStyles,        })        .margin({ bottom: 20 })        .textAlign(TextAlign.Center)      Text(this.isEnable == true ? "effective" : "disabled")        .backgroundColor("#0A59F7")        .borderRadius(20)        .borderStyle(BorderStyle.Solid)        .borderWidth(2)        .borderColor(Color.Gray)        .width(100)        .height(25)        .opacity(1)        .fontSize(14)        .fontColor(Color.White)        .enabled(this.isEnable)        .stateStyles({          disabled: this.disabledStyles,        })        .textAlign(TextAlign.Center)      Text("control disabled")        .onClick(() => {          this.isEnable = !this.isEnable          console.log(`${this.isEnable}`)        })        .fontSize(10)    }    .width(350).height(300).margin(10)  }}    上一篇 触摸热区设置 下一篇 触摸测试控制 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。