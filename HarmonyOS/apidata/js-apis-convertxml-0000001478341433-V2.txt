您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块ConvertXMLconvertToJSObject9+convert(deprecated)ConvertOptions@ohos.convertxml (xml转换JavaScript) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 本模块提供转换xml文本为JavaScript对象的功能。 
说明
本模块首批接口从API version 8开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import convertxml from '@ohos.convertxml';  ConvertXML convertToJSObject9+convertToJSObject(xml: string, options?: ConvertOptions) : Object 转换xml文本为JavaScript对象。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    xml  string  是  传入的xml文本。   options  ConvertOptions  否  转换选项，默认值是ConvertOptions对象 , 由其中各个属性的默认值组成。。     返回值：  类型  说明  Object  处理后返回的JavaScript对象。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200002  Invalid xml string.     示例： 已复制try {    let xml =        '<?xml version="1.0" encoding="utf-8"?>' +        '<note importance="high" logged="true">' +        '    <title>Happy</title>' +        '    <todo>Work</todo>' +        '    <todo>Play</todo>' +        '</note>';    let conv = new convertxml.ConvertXML()    let options = {        trim: false, declarationKey: "_declaration",        instructionKey: "_instruction", attributesKey: "_attributes",        textKey: "_text", cdataKey: "_cdata", doctypeKey: "_doctype",        commentKey: "_comment", parentKey: "_parent", typeKey: "_type",        nameKey: "_name", elementsKey: "_elements"    }    let result = JSON.stringify(conv.convertToJSObject(xml, options));    console.log(result);} catch (e) {    console.log(e.toString());}// 输出(宽泛型)// {"_declaration":{"_attributes":{"version":"1.0","encoding":"utf-8"}},"_elements":[{"_type":"element","_name":"note","_attributes":{"importance":"high","logged":"true"},"_elements":[{"_type":"element","_name":"title","_elements":[{"_type":"text","_text":"Happy"}]},{"_type":"element","_name":"todo","_elements":[{"_type":"text","_text":"Work"}]},{"_type":"element","_name":"todo","_elements":[{"_type":"text","_text":"Play"}]}]}]}  convert(deprecated)convert(xml: string, options?: ConvertOptions) : Object 转换xml文本为JavaScript对象。 
说明
从API version 8开始支持，从API version 9开始废弃，建议使用convertToJSObject9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    xml  string  是  传入的xml文本。   options  ConvertOptions  否  转换选项，默认值是ConvertOptions对象 , 由其中各个属性的默认值组成。。     返回值：  类型  说明  Object  处理后返回的JavaScript对象。     示例： 已复制let xml =    '<?xml version="1.0" encoding="utf-8"?>' +    '<note importance="high" logged="true">' +    '    <title>Happy</title>' +    '    <todo>Work</todo>' +    '    <todo>Play</todo>' +    '</note>';let conv = new convertxml.ConvertXML();let options = {trim : false, declarationKey:"_declaration",    instructionKey : "_instruction", attributesKey : "_attributes",    textKey : "_text", cdataKey:"_cdata", doctypeKey : "_doctype",    commentKey : "_comment", parentKey : "_parent", typeKey : "_type",    nameKey : "_name", elementsKey : "_elements"}let result = JSON.stringify(conv.convert(xml, options));console.log(result);// 输出(宽泛型)// {"_declaration":{"_attributes":{"version":"1.0","encoding":"utf-8"}},"_elements":[{"_type":"element","_name":"note","_attributes":{"importance":"high","logged":"true"},"_elements":[{"_type":"element","_name":"title","_elements":[{"_type":"text","_text":"Happy"}]},{"_type":"element","_name":"todo","_elements":[{"_type":"text","_text":"Work"}]},{"_type":"element","_name":"todo","_elements":[{"_type":"text","_text":"Play"}]}]}]}  ConvertOptions转换选项。 系统能力： SystemCapability.Utils.Lang 名称  类型  必填  说明    trim  boolean  是  是否修剪位于文本前后的空白字符。   ignoreDeclaration  boolean  否  是否忽略xml写入声明指示，默认false。   ignoreInstruction  boolean  否  是否忽略xml的写入处理指令，默认false。   ignoreAttributes  boolean  否  是否跨多行打印属性并缩进属性，默认false。   ignoreComment  boolean  否  是否忽略元素的注释信息，默认false。   ignoreCDATA  boolean  否  是否忽略元素的CDATA信息，默认false。   ignoreDoctype  boolean  否  是否忽略元素的Doctype信息，默认false。   ignoreText  boolean  否  是否忽略元素的文本信息，默认false。   declarationKey  string  是  用于输出对象中declaration的属性键的名称。   instructionKey  string  是  用于输出对象中instruction的属性键的名称。   attributesKey  string  是  用于输出对象中attributes的属性键的名称。   textKey  string  是  用于输出对象中text的属性键的名称。   cdataKey  string  是  用于输出对象中cdata的属性键的名称。   doctypeKey  string  是  用于输出对象中doctype的属性键的名称。   commentKey  string  是  用于输出对象中comment的属性键的名称。   parentKey  string  是  用于输出对象中parent的属性键的名称。   typeKey  string  是  用于输出对象中type的属性键的名称。   nameKey  string  是  用于输出对象中name的属性键的名称。   elementsKey  string  是  用于输出对象中elements的属性键的名称。       上一篇 @ohos.buffer (Buffer) 下一篇 @ohos.process (获取进程相关的信息) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。