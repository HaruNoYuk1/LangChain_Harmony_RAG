您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。属性MenuItem示例示例1示例2示例3菜单控制 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 为组件绑定弹出式菜单，弹出式菜单以垂直列表形式显示菜单项，可通过长按、点击或鼠标右键触发。 
说明
从API Version 7开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。CustomBuilder里不支持再使用bindMenu、bindContextMenu弹出菜单。多级菜单可使用Menu组件。弹出菜单的文本内容不支持长按选中。 
 属性 名称  参数类型  描述    bindMenu  Array<MenuItem> | CustomBuilder  给组件绑定菜单，点击后弹出菜单。弹出菜单项支持文本和自定义两种功能。   bindContextMenu8+  content: CustomBuilder, responseType: ResponseType  给组件绑定菜单，触发方式为长按或者右键点击，弹出菜单项需要自定义。      MenuItem 名称  类型  描述    value  string  菜单项文本。   action  () => void  点击菜单项的事件回调。      示例 示例1普通菜单 已复制// xxx.ets@Entry@Componentstruct MenuExample {  build() {    Column() {      Text('click for Menu')    }    .width('100%')    .margin({ top: 5 })    .bindMenu([      {        value: 'Menu1',        action: () => {          console.info('handle Menu1 select')        }      },      {        value: 'Menu2',        action: () => {          console.info('handle Menu2 select')        }      },    ])  }}   示例2自定义内容菜单 已复制@Entry@Componentstruct MenuExample {  @State listData: number[] = [0, 0, 0]
  @Builder MenuBuilder() {    Flex({ direction: FlexDirection.Column, justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {      ForEach(this.listData, (item, index) => {        Column() {          Row() {            Image($r("app.media.icon")).width(20).height(20).margin({ right: 5 })            Text(`Menu${index + 1}`).fontSize(20)          }          .width('100%')          .height(30)          .justifyContent(FlexAlign.Center)          .align(Alignment.Center)          .onClick(() => {            console.info(`Menu${index + 1} Clicked!`)          })
          if (index != this.listData.length - 1) {            Divider().height(10).width('80%').color('#ccc')          }        }.padding(5).height(40)      })    }.width(100)  }
  build() {    Column() {      Text('click for menu')        .fontSize(20)        .margin({ top: 20 })        .bindMenu(this.MenuBuilder)    }    .height('100%')    .width('100%')    .backgroundColor('#f0f0f0')  }}   示例3菜单(右键触发显示) 已复制// xxx.ets@Entry@Componentstruct ContextMenuExample {  @Builder MenuBuilder() {    Flex({ direction: FlexDirection.Column, justifyContent: FlexAlign.Center, alignItems: ItemAlign.Center }) {      Text('Test menu item 1')        .fontSize(20)        .width(100)        .height(50)        .textAlign(TextAlign.Center)      Divider().height(10)      Text('Test menu item 2')        .fontSize(20)        .width(100)        .height(50)        .textAlign(TextAlign.Center)    }.width(100)  }    build() {    Column() {      Text('rightclick for menu')    }    .width('100%')    .margin({ top: 5 })    .bindContextMenu(this.MenuBuilder, ResponseType.RightClick)  }}   上一篇 Popup控制 下一篇 焦点控制 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。