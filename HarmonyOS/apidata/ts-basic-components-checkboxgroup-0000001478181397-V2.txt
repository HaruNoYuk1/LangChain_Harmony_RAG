您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。子组件接口属性事件CheckboxGroupResult对象说明SelectStatus枚举说明示例CheckboxGroup 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 多选框群组，用于控制多选框全选或者不全选状态。 
说明
该组件从API Version 8开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。 
 子组件无  接口CheckboxGroup(options?: { group?: string }) 创建多选框群组，可以控制群组内的Checkbox全选或者不全选，group值相同的Checkbox和CheckboxGroup为同一群组。 从API version 9开始，该接口支持在ArkTS卡片中使用。 参数: 参数名  参数类型  必填  参数描述    group  string  否  群组名称。 说明： 多个相同群组名称的CheckboxGroup，仅第一个CheckboxGroup生效。      属性除支持通用属性外，还支持以下属性： 名称  参数类型  描述    selectAll  boolean  设置是否全选。 默认值：false，若同组的Checkbox显式设置select，则Checkbox的优先级高。 从API version 9开始，该接口支持在ArkTS卡片中使用。   selectedColor  ResourceColor  设置被选中或部分选中状态的颜色。 从API version 9开始，该接口支持在ArkTS卡片中使用。      事件除支持通用事件外，还支持以下事件：  名称  功能描述  onChange (callback: (event: CheckboxGroupResult) => void )  CheckboxGroup的选中状态或群组内的Checkbox的选中状态发生变化时，触发回调。 从API version 9开始，该接口支持在ArkTS卡片中使用。      CheckboxGroupResult对象说明从API version 9开始，该接口支持在ArkTS卡片中使用。 名称  类型  描述    name  Array<string>  群组内所有被选中的多选框名称。   status  SelectStatus  选中状态。      SelectStatus枚举说明从API version 9开始，该接口支持在ArkTS卡片中使用。  名称  描述  All  群组多选择框全部选择。   Part  群组多选择框部分选择。   None  群组多选择框全部没有选择。      示例已复制// xxx.ets@Entry@Componentstruct CheckboxExample {  build() {    Scroll() {      Column() {        // 全选按钮        Flex({ justifyContent: FlexAlign.Start, alignItems: ItemAlign.Center }) {          CheckboxGroup({ group: 'checkboxGroup' })            .selectedColor('#007DFF')            .onChange((itemName: CheckboxGroupResult) => {              console.info("checkbox group content" + JSON.stringify(itemName))            })          Text('Select All').fontSize(14).lineHeight(20).fontColor('#182431').fontWeight(500)        }
        // 选项1        Flex({ justifyContent: FlexAlign.Start, alignItems: ItemAlign.Center }) {          Checkbox({ name: 'checkbox1', group: 'checkboxGroup' })            .selectedColor('#007DFF')            .onChange((value: boolean) => {              console.info('Checkbox1 change is' + value)            })          Text('Checkbox1').fontSize(14).lineHeight(20).fontColor('#182431').fontWeight(500)        }.margin({ left: 36 })
        // 选项2        Flex({ justifyContent: FlexAlign.Start, alignItems: ItemAlign.Center }) {          Checkbox({ name: 'checkbox2', group: 'checkboxGroup' })            .selectedColor('#007DFF')            .onChange((value: boolean) => {              console.info('Checkbox2 change is' + value)            })          Text('Checkbox2').fontSize(14).lineHeight(20).fontColor('#182431').fontWeight(500)        }.margin({ left: 36 })
        // 选项3        Flex({ justifyContent: FlexAlign.Start, alignItems: ItemAlign.Center }) {          Checkbox({ name: 'checkbox3', group: 'checkboxGroup' })            .selectedColor('#007DFF')            .onChange((value: boolean) => {              console.info('Checkbox3 change is' + value)            })          Text('Checkbox3').fontSize(14).lineHeight(20).fontColor('#182431').fontWeight(500)        }.margin({ left: 36 })      }    }  }}    上一篇 Checkbox 下一篇 DataPanel 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。