您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块data.getDefaultCellularDataSlotIddata.getDefaultCellularDataSlotIddata.getDefaultCellularDataSlotIdSync9+data.getCellularDataFlowTypedata.getCellularDataFlowTypedata.getCellularDataStatedata.getCellularDataStatedata.isCellularDataEnableddata.isCellularDataEnableddata.isCellularDataRoamingEnableddata.isCellularDataRoamingEnabledDataFlowTypeDataConnectState@ohos.telephony.data (蜂窝数据) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 蜂窝数据提供了移动数据管理能力，包括获取、设置默认移动数据的SIM卡，获取蜂窝数据业务的上下行和分组交换域（PS域）的连接状态，以及检查蜂窝数据业务和漫游是否启用等。 
说明
本模块首批接口从API version 7开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import data from '@ohos.telephony.data';  data.getDefaultCellularDataSlotIdgetDefaultCellularDataSlotId(callback: AsyncCallback<number>): void 获取默认移动数据的SIM卡，使用callback方式作为异步方法。 系统能力：SystemCapability.Telephony.CellularData 参数： 参数名  类型  必填  说明    callback  AsyncCallback<number>  是  回调函数。 0：卡槽1。 1：卡槽2。     示例： 已复制data.getDefaultCellularDataSlotId((err, data) => {    console.log(`callback: err->${JSON.stringify(err)}, data->${JSON.stringify(data)}`);});  data.getDefaultCellularDataSlotIdgetDefaultCellularDataSlotId(): Promise<number> 获取默认移动数据的SIM卡，使用Promise方式作为异步方法。 系统能力：SystemCapability.Telephony.CellularData 返回值：  类型  说明  Promise<number>  以Promise形式返回获取默认移动数据的SIM卡。 0：卡槽1。 1：卡槽2。     示例： 已复制let promise = data.getDefaultCellularDataSlotId();promise.then((data) => {    console.log(`getDefaultCellularDataSlotId success, promise: data->${JSON.stringify(data)}`);}).catch((err) => {    console.error(`getDefaultCellularDataSlotId fail, promise: err->${JSON.stringify(err)}`);});  data.getDefaultCellularDataSlotIdSync9+getDefaultCellularDataSlotIdSync(): number 获取默认移动数据的SIM卡 系统能力：SystemCapability.Telephony.CellularData 返回值：  类型  说明  number  获取默认移动数据的SIM卡。 0：卡槽1。 1：卡槽2。     示例： 已复制console.log("Result: "+ data.getDefaultCellularDataSlotIdSync())  data.getCellularDataFlowTypegetCellularDataFlowType(callback: AsyncCallback<DataFlowType>): void 获取蜂窝数据业务的上下行状态，使用callback方式作为异步方法。 系统能力：SystemCapability.Telephony.CellularData 参数： 参数名  类型  必填  说明    callback  AsyncCallback<DataFlowType>  是  回调函数。     示例： 已复制data.getCellularDataFlowType((err, data) => {    console.log(`callback: err->${JSON.stringify(err)}, data->${JSON.stringify(data)}`);});  data.getCellularDataFlowTypegetCellularDataFlowType(): Promise<DataFlowType> 获取蜂窝数据业务的上下行状态，使用Promise方式作为异步方法。 系统能力：SystemCapability.Telephony.CellularData 返回值：  类型  说明  Promise<DataFlowType>  以Promise形式返回获取蜂窝数据业务的上下行状态。     示例： 已复制let promise = data.getCellularDataFlowType();promise.then((data) => {    console.log(`test success, promise: data->${JSON.stringify(data)}`);}).catch((err) => {    console.error(`test fail, promise: err->${JSON.stringify(err)}`);});  data.getCellularDataStategetCellularDataState(callback: AsyncCallback<DataConnectState>): void 获取分组交换域（PS域）的连接状态，使用callback方式作为异步方法。 系统能力：SystemCapability.Telephony.CellularData 参数： 参数名  类型  必填  说明    callback  AsyncCallback<DataConnectState>  是  回调函数。     示例： 已复制data.getCellularDataState((err, data) => {    console.log(`callback: err->${JSON.stringify(err)}, data->${JSON.stringify(data)}`);});  data.getCellularDataStategetCellularDataState(): Promise<DataConnectState> 获取分组交换域(PS域)的连接状态，使用Promise方式作为异步方法。 系统能力：SystemCapability.Telephony.CellularData 返回值：  类型  说明  Promise<DataConnectState>  以Promise形式返回获取PS域的连接状态。     示例： 已复制let promise = data.getCellularDataState();promise.then((data) => {    console.log(`test success, promise: data->${JSON.stringify(data)}`);}).catch((err) => {    console.error(`test fail, promise: err->${JSON.stringify(err)}`);});  data.isCellularDataEnabledisCellularDataEnabled(callback: AsyncCallback<boolean>): void 检查蜂窝数据业务是否启用，使用callback方式作为异步方法。 需要权限：ohos.permission.GET_NETWORK_INFO 系统能力：SystemCapability.Telephony.CellularData 参数： 参数名  类型  必填  说明    callback  AsyncCallback<boolean>  是  回调函数。 true：蜂窝数据业务已启用。 false：蜂窝数据业务已禁用。     错误码： 以下错误码的详细介绍请参见ohos.telephony(电话子系统)错误码错误码。  错误码ID  错误信息  201  Permission denied.   401  Parameter error.   8300001  Invalid parameter value.   8300002  Operation failed. Cannot connect to service.   8300003  System internal error.   8300999  Unknown error code.     示例： 已复制data.isCellularDataEnabled((err, data) => {    console.log(`callback: err->${JSON.stringify(err)}, data->${JSON.stringify(data)}`);});  data.isCellularDataEnabledisCellularDataEnabled(): Promise<boolean> 检查蜂窝数据业务是否启用，使用Promise方式作为异步方法。 需要权限：ohos.permission.GET_NETWORK_INFO 系统能力：SystemCapability.Telephony.CellularData 返回值：  类型  说明  Promise<boolean>  以Promise形式返回检查蜂窝数据业务是否启用。 true：蜂窝数据业务已启用。 false：蜂窝数据业务已禁用。     错误码： 以下错误码的详细介绍请参见ohos.telephony(电话子系统)错误码错误码。  错误码ID  错误信息  201  Permission denied.   401  Parameter error.   8300001  Invalid parameter value.   8300002  Operation failed. Cannot connect to service.   8300003  System internal error.   8300999  Unknown error code.     示例： 已复制let promise = data.isCellularDataEnabled();promise.then((data) => {    console.log(`test success, promise: data->${JSON.stringify(data)}`);}).catch((err) => {    console.error(`test fail, promise: err->${JSON.stringify(err)}`);});  data.isCellularDataRoamingEnabledisCellularDataRoamingEnabled(slotId: number, callback: AsyncCallback<boolean>): void 检查蜂窝数据业务是否启用漫游，使用callback方式作为异步方法。 需要权限：ohos.permission.GET_NETWORK_INFO 系统能力：SystemCapability.Telephony.CellularData 参数： 参数名  类型  必填  说明    slotId  number  是  卡槽ID。 0：卡槽1。 1：卡槽2。   callback  AsyncCallback<boolean>  是  回调函数。 true：蜂窝数据业务已启用漫游。 false：蜂窝数据业务已禁用漫游。     错误码： 以下错误码的详细介绍请参见ohos.telephony(电话子系统)错误码错误码。  错误码ID  错误信息  201  Permission denied.   401  Parameter error.   8300001  Invalid parameter value.   8300002  Operation failed. Cannot connect to service.   8300003  System internal error.   8300999  Unknown error code.     示例： 已复制data.isCellularDataRoamingEnabled(0, (err, data) => {    console.log(`callback: err->${JSON.stringify(err)}, data->${JSON.stringify(data)}`);});  data.isCellularDataRoamingEnabledisCellularDataRoamingEnabled(slotId: number): Promise<boolean> 检查蜂窝数据业务是否启用漫游，使用Promise方式作为异步方法。 需要权限：ohos.permission.GET_NETWORK_INFO 系统能力：SystemCapability.Telephony.CellularData 参数： 参数名  类型  必填  说明    slotId  number  是  卡槽ID。 0：卡槽1。 1：卡槽2。     返回值：  类型  说明  Promise<boolean>  以Promise形式返回检查蜂窝数据业务是否启用漫游。 true：蜂窝数据业务已启用漫游。 false：蜂窝数据业务已禁用漫游。     错误码： 以下错误码的详细介绍请参见ohos.telephony(电话子系统)错误码错误码。  错误码ID  错误信息  201  Permission denied.   401  Parameter error.   8300001  Invalid parameter value.   8300002  Operation failed. Cannot connect to service.   8300003  System internal error.   8300999  Unknown error code.     示例： 已复制let promise = data.isCellularDataRoamingEnabled(0);promise.then((data) => {    console.log(`test success, promise: data->${JSON.stringify(data)}`);}).catch((err) => {    console.error(`test fail, promise: err->${JSON.stringify(err)}`);});  DataFlowType描述蜂窝数据流类型。 系统能力：以下各项对应的系统能力均为SystemCapability.Telephony.CellularData。 名称  值  说明    DATA_FLOW_TYPE_NONE  0  表示没有上行或下行数据。   DATA_FLOW_TYPE_DOWN  1  表示只有下行数据。   DATA_FLOW_TYPE_UP  2  表示只有上行数据。   DATA_FLOW_TYPE_UP_DOWN  3  表示有上下行数据。   DATA_FLOW_TYPE_DORMANT  4  表示没有上下行数据，底层链路处于休眠状态。      DataConnectState描述蜂窝数据链路连接状态。 系统能力：以下各项对应的系统能力均为SystemCapability.Telephony.CellularData。 名称  值  说明    DATA_STATE_UNKNOWN  -1  表示蜂窝数据链路未知。   DATA_STATE_DISCONNECTED  0  表示蜂窝数据链路断开。   DATA_STATE_CONNECTING  1  表示正在连接蜂窝数据链路。   DATA_STATE_CONNECTED  2  表示蜂窝数据链路已连接。   DATA_STATE_SUSPENDED  3  表示蜂窝数据链路被挂起。       上一篇 @ohos.telephony.call (拨打电话) 下一篇 @ohos.telephony.observer (observer) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。