您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。子组件接口属性事件TextTimerController导入对象startpausereset示例TextTimer 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 通过文本显示计时信息并控制其计时器状态的组件。 
说明
 该组件从API Version 8开始支持。后续版本如有新增内容，则采用上角标单独标记该内容的起始版本。 
 子组件无  接口TextTimer(options?: { isCountDown?: boolean, count?: number, controller?: TextTimerController }) 参数： 参数名 参数类型 必填 参数描述   isCountDown boolean 否 是否倒计时。 默认值：false   count number 否 倒计时时间（isCountDown为true时生效），单位为毫秒。最长不超过86400000毫秒（24小时）。 0<count<86400000时，count值为倒计时初始值。否则，使用默认值为倒计时初始值。 默认值：60000   controller TextTimerController 否 TextTimer控制器。     属性 名称 参数类型 描述   format string 自定义格式，需至少包含一个HH、mm、ss、SS中的关键字。如使用yy、MM、dd等日期格式，则使用默认值。 默认值：'HH:mm:ss.SS'      事件  名称 功能描述 onTimer(event: (utc: number, elapsedTime: number) => void) 时间文本发生变化时触发。 utc：Linux时间戳，即自1970年1月1日起经过的毫秒数。 elapsedTime：计时器经过的时间，单位为毫秒。      TextTimerControllerTextTimer组件的控制器，用于控制文本计时器。一个TextTimer组件仅支持绑定一个控制器。  导入对象已复制textTimerController: TextTimerController = new TextTimerController()  startstart() 计时开始。  pausepause() 计时暂停。  resetreset() 重置计时器。  示例已复制// xxx.ets@Entry@Componentstruct TextTimerExample {  textTimerController: TextTimerController = new TextTimerController()  @State format: string = 'mm:ss.SS'
  build() {    Column() {      TextTimer({ isCountDown: true, count: 30000, controller: this.textTimerController })        .format(this.format)        .fontColor(Color.Black)        .fontSize(50)        .onTimer((utc: number, elapsedTime: number) => {          console.info('textTimer notCountDown utc is：' + utc + ', elapsedTime: ' + elapsedTime)        })      Row() {        Button("start").onClick(() => {          this.textTimerController.start()        })        Button("pause").onClick(() => {          this.textTimerController.pause()        })        Button("reset").onClick(() => {          this.textTimerController.reset()        })      }    }  }}    上一篇 TextPicker 下一篇 TimePicker 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。