您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块URI属性命名规则constructortoStringequals(deprecated)equalsTo9+checkIsAbsolutenormalize@ohos.uri (URI字符串解析) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 本模块提供URI字符串解析的相关功能。 
说明
本模块首批接口从API version 8开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import uri from '@ohos.uri'    URI构造URI对象，提供判断对象相等、规范路径等方法。  属性系统能力： SystemCapability.Utils.Lang 名称  类型  可读  可写  说明    scheme  string  是  否  获取URI 的协议部分。   userInfo  string  是  否  获取 URI 的用户信息部分。   host  string  是  否  获取 URI 的主机名部分（不带端口）。   port  string  是  否  获取 URI 的端口部分。   path  string  是  否  获取 URI 的路径部分。   query  string  是  否  获取 URI 的查询部分。   fragment  string  是  否  获取 URI 的片段部分   authority  string  是  否  获取此URI的解码权限组件部分。   ssp  string  是  否  获取URI的解码方案特定部分。      命名规则命名形式： 标准uri定义由以下三个部分组成 [scheme:]scheme-specific-part[#fragment] scheme: 协议名，根据需要填写。例如http、https、ftp、datashare、dataability等。scheme-specific-part: URI的特定解码方案特定部分，由[//][authority][path][?query]组成，根据需要填写。authority: URI的解码权限组件部分。由[userinfo@]host[:port]组成，根据需要填写。userinfo: 用户信息，根据需要填写。host: 服务器的主机名部分，当authority存在时，此项必填。port: 服务器端口，根据需要填写。 path: 路径信息，根据需要填写。query: 查询部分，根据需要填写。 fragment: 片段部分，根据需要填写。 URI示例： 已复制const result1 = new uri.URI("ftp://ftp.aaa.bbb.ccc/dddd/eee.txt");console.log(result1.host) // ftp.aaa.bbb.cccconsole.log(result1.fragment) // nullconsole.log(result1.path) // /dddd/eee.txtconsole.log(result1.scheme) // ftpconsole.log(result1.userInfo) // nullconsole.log(result1.port) // -1console.log(result1.query) // null
const result2 = new uri.URI("gopher://spinaltap.micro.umn.edu/00/Weather/California/Los%20Angeles#fragment");console.log(result2.host) // spinaltap.micro.umn.educonsole.log(result2.fragment) // fragmentconsole.log(result2.path) // /00/Weather/California/Los Angelesconsole.log(result2.scheme) // gopherconsole.log(result2.userInfo) // nullconsole.log(result2.port) //-1console.log(result2.query) // null
const result3 = new uri.URI("datashare:///com.samples.datasharetest.DataShare/DB00/TBL00");console.log(result3.host) // nullconsole.log(result3.fragment) // nullconsole.log(result3.path) // /com.samples.datasharetest.DataShare/DB00/TBL00console.log(result3.scheme) // datashareconsole.log(result3.userInfo) // nullconsole.log(result3.port) // -1console.log(result3.query) // null
const result4 = new uri.URI("https://username:password@host:8080/directory/file?foo=1&bar=2#fragment");console.log(result4.host) // hostconsole.log(result4.fragment) // fragmentconsole.log(result4.path) // /directory/fileconsole.log(result4.scheme) // httpsconsole.log(result4.userInfo) // username:passwordconsole.log(result4.port) // 8080console.log(result4.query) // foo=1&bar=2
const result5 = new uri.URI("dataability:///com.example.DataAbility");console.log(result5.host) // nullconsole.log(result5.fragment) // nullconsole.log(result5.path) // /com.example.DataAbility:console.log(result5.scheme) // dataabilityconsole.log(result5.userInfo) // nullconsole.log(result5.port) // -1console.log(result5.query) // null  constructorconstructor(uri: string) constructor是URI的构造函数。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    uri  string  是  入参对象。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200002  Invalid uri string.     示例： 已复制let mm = 'https://username:password@host:8080/directory/file?foo=1&bar=2#fragment';new uri.URI(mm); // Output 'https://username:password@host:8080/directory/file?foo=1&bar=2#fragment'; 已复制new uri.URI('https://username:password@host:8080'); // Output 'https://username:password@host:8080';  toStringtoString(): string 系统能力： SystemCapability.Utils.Lang 返回适用于URI中的查询字符串。 返回值：  类型  说明  string  返回网址的字符串序列化。     示例： 已复制const result = new uri.URI('https://username:password@host:8080/directory/file?query=pppppp#qwer=da');result.toString()  equals(deprecated)equals(other: URI): boolean 判断此URI是否与其他URI对象相等。 
说明
从API version 8开始支持，从API version 9开始废弃，建议使用equalsTo9+替代。 
 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    other  URI  是  需要比较的URI对象。     返回值：  类型  说明  boolean  返回true表示相等，否则返回false。     示例： 已复制const uriInstance = new uri.URI('https://username:password@host:8080/directory/file?query=pppppp#qwer=da');const uriInstance1 = new uri.URI('https://username:password@host:8080/directory/file?query=pppppp#qwer=da');uriInstance.equals(uriInstance1);  equalsTo9+equalsTo(other: URI): boolean 判断此URI是否与其他URI对象相等。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    other  URI  是  需要比较的URI对象。     返回值：  类型  说明  boolean  返回true表示相等，否则返回false。     示例： 已复制const uriInstance = new uri.URI('https://username:password@host:8080/directory/file?query=pppppp#qwer=da');const uriInstance1 = new uri.URI('https://username:password@host:8080/directory/file?query=pppppp#qwer=da');uriInstance.equalsTo(uriInstance1);  checkIsAbsolutecheckIsAbsolute(): boolean 判断此URI是否为绝对URI（是否定义了scheme组件）。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  boolean  如果是绝对URI返回true，否则返回false。     示例： 已复制const uriInstance = new uri.URI('https://username:password@www.qwer.com:8080?query=pppppp');console.log(`${uriInstance.checkIsAbsolute()}`); // trueconst uriInstance1 = new uri.URI('xxx.com/suppliers.htm');console.log(`${uriInstance1.checkIsAbsolute()}`); // false  normalizenormalize(): URI 规范化此URI的路径。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  URI  返回一个path被规范化后的URI对象。     示例： 已复制const uriInstance = new uri.URI('https://username:password@www.qwer.com:8080/path/path1/../path2/./path3?query=pppppp');console.log(uriInstance.path); // /path/path1/../path2/./path3let uriInstance1 = uriInstance.normalize();console.log(uriInstance1.path); // /path/path2/path3   上一篇 @ohos.taskpool（使用任务池） 下一篇 @ohos.url (URL字符串解析) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。