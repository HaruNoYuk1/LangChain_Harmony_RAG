您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块setFormNextRefreshTimesetFormNextRefreshTimeupdateFormupdateFormgetFormsInfogetFormsInfogetFormsInfo@ohos.app.form.formProvider (FormProvider) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 FormProvider模块提供了卡片提供方相关接口的能力，开发者在开发卡片时，可通过该模块提供接口实现更新卡片，设置卡片更新时间，获取卡片信息，请求发布卡片等。 
说明
本模块首批接口从API version 9开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import formProvider from '@ohos.app.form.formProvider';  setFormNextRefreshTimesetFormNextRefreshTime(formId: string, minute: number, callback: AsyncCallback<void>): void 设置指定卡片的下一次更新时间，使用callback异步回调。 系统能力： SystemCapability.Ability.Form 参数： 参数名  类型  必填  说明    formId  string  是  卡片标识。   minute  number  是  指定多久之后更新，单位分钟，大于等于5。   callback  AsyncCallback<void>  是  回调函数。     错误码：  错误码ID  错误信息  401  If the input parameter is not valid parameter.   以上错误码的详细介绍请参见卡片错误码。        示例： 已复制var formId = '12400633174999288';try {  formProvider.setFormNextRefreshTime(formId, 5, (error, data) => {    if (error) {      console.log('formProvider setFormNextRefreshTime, error:' + JSON.stringify(error));    } else {      console.log(`formProvider setFormNextRefreshTime success`);    }  });} catch (error) {    console.log('error' + JSON.stringify(error))}  setFormNextRefreshTimesetFormNextRefreshTime(formId: string, minute: number): Promise<void> 设置指定卡片的下一次更新时间，使用Promise异步回调。 系统能力： SystemCapability.Ability.Form 参数： 参数名  类型  必填  说明    formId  string  是  卡片标识。   minute  number  是  指定多久之后更新，单位分钟，大于等于5。     返回值：  类型  说明  Promise<void>  无返回结果的Promise对象。     错误码：  错误码ID  错误信息  401  If the input parameter is not valid parameter.   以上错误码的详细介绍请参见卡片错误码。        示例： 已复制var formId = '12400633174999288';try {  formProvider.setFormNextRefreshTime(formId, 5).then(() => {  console.log('formProvider setFormNextRefreshTime success');  }).catch((error) => {    console.log('formProvider setFormNextRefreshTime, error:' + JSON.stringify(error));  });} catch (error) {  console.log(`catch err->${JSON.stringify(error)}`);}  updateFormupdateForm(formId: string, formBindingData: formBindingData.FormBindingData,callback: AsyncCallback<void>): void 更新指定的卡片，使用callback异步回调。 系统能力： SystemCapability.Ability.Form 参数： 参数名  类型  必填  说明    formId  string  是  请求更新的卡片标识。   formBindingData.FormBindingData  FormBindingData  是  用于更新的数据。   callback  AsyncCallback<void>  是  回调函数。     错误码：  错误码ID  错误信息  401  If the input parameter is not valid parameter.   以上错误码的详细介绍请参见卡片错误码。        示例： 已复制import formBindingData from '@ohos.application.formBindingData';var formId = '12400633174999288';try {  let obj = formBindingData.createFormBindingData({temperature:'22c', time:'22:00'});  formProvider.updateForm(formId, obj, (error, data) => {    if (error) {      console.log('formProvider updateForm, error:' + JSON.stringify(error));    } else {      console.log(`formProvider updateForm success`);    }  });} catch (error) {  console.log(`catch err->${JSON.stringify(error)}`);}  updateFormupdateForm(formId: string, formBindingData: formBindingData.FormBindingData): Promise<void> 更新指定的卡片，使用Promise异步回调。 系统能力： SystemCapability.Ability.Form 参数： 参数名  类型  必填  说明    formId  string  是  请求更新的卡片标识。   formBindingData.FormBindingData  FormBindingData  是  用于更新的数据。     返回值：  类型  说明  Promise<void>  无返回结果的Promise对象。     错误码：  错误码ID  错误信息  401  If the input parameter is not valid parameter.   以上错误码的详细介绍请参见卡片错误码。        示例： 已复制import formBindingData from '@ohos.application.formBindingData';var formId = '12400633174999288';let obj = formBindingData.createFormBindingData({temperature:'22c', time:'22:00'});try {  formProvider.updateForm(formId, obj).then(() => {      console.log('formProvider updateForm success');  }).catch((error) => {      console.log('formProvider updateForm, error:' + JSON.stringify(error));  });} catch (error) {  console.log(`catch err->${JSON.stringify(error)}`);}  getFormsInfogetFormsInfo(callback: AsyncCallback<Array<formInfo.FormInfo>>): void 获取设备上当前应用程序的卡片信息，使用callback异步回调。 系统能力： SystemCapability.Ability.Form 参数： 参数名  类型  必填  说明    callback  AsyncCallback<Array<FormInfo>>  是  回调函数。返回查询到的卡片信息。     错误码：  错误码ID  错误信息  401  If the input parameter is not valid parameter.   以上错误码的详细介绍请参见卡片错误码。        示例： 已复制try {  formProvider.getFormsInfo((error, data) => {    if (error) {      console.log('formProvider getFormsInfo, error:' + JSON.stringify(error));    } else {      console.log('formProvider getFormsInfo, data:' + JSON.stringify(data));    }  });} catch (error) {    console.log(`catch err->${JSON.stringify(error)}`);}  getFormsInfogetFormsInfo(filter: formInfo.FormInfoFilter, callback: AsyncCallback<Array<formInfo.FormInfo>>): void 获取设备上当前应用程序的卡片信息，并筛选符合条件的信息，使用callback异步回调。 系统能力： SystemCapability.Ability.Form 参数： 参数名  类型  必填  说明    filter  formInfo.FormInfoFilter  是  卡片信息过滤器。   callback  AsyncCallback<Array<FormInfo>>  是  回调函数。返回查询到符合条件的卡片信息。     错误码：  错误码ID  错误信息  401  If the input parameter is not valid parameter.   以上错误码的详细介绍请参见卡片错误码。        示例： 已复制import formInfo from '@ohos.app.form.formInfo';
const filter : formInfo.FormInfoFilter = {    // get info of forms belong to module entry.    moduleName : 'entry'};try {  formProvider.getFormsInfo(filter, (error, data) => {    if (error) {      console.log('formProvider getFormsInfo, error:' + JSON.stringify(error));    } else {      console.log('formProvider getFormsInfo, data:' + JSON.stringify(data));    }  });} catch(error) {  console.log(`catch err->${JSON.stringify(error)}`);}  getFormsInfogetFormsInfo(filter?: formInfo.FormInfoFilter): Promise<Array<formInfo.FormInfo>> 获取设备上当前应用程序的卡片信息，使用Promise异步回调。 系统能力： SystemCapability.Ability.Form 参数： 参数名  类型  必填  说明    filter  formInfo.FormInfoFilter  否  卡片信息过滤器。     返回值：  类型  说明  Promise<Array<FormInfo>>  Promise对象。返回查询到符合条件的卡片信息。     错误码：  错误码ID  错误信息  401  If the input parameter is not valid parameter.   以上错误码的详细介绍请参见卡片错误码。        示例： 已复制import formInfo from '@ohos.app.form.formInfo';
const filter : formInfo.FormInfoFilter = {    // get info of forms belong to module entry.    moduleName : 'entry'};try {  formProvider.getFormsInfo(filter).then((data) => {    console.log('formProvider getFormsInfo, data:' + JSON.stringify(data));  }).catch((error) => {    console.log('formProvider getFormsInfo, error:' + JSON.stringify(error));  });} catch (error) {  console.log(`catch err->${JSON.stringify(error)}`);}   上一篇 @ohos.app.form.formInfo (FormInfo) 下一篇 通用能力的接口(待停用) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。