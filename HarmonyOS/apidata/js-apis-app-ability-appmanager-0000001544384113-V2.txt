您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块appManager.isRunningInStabilityTestappManager.isRunningInStabilityTestappManager.isRamConstrainedDeviceappManager.isRamConstrainedDeviceappManager.getAppMemorySizeappManager.getAppMemorySizeappManager.getRunningProcessInformationappManager.getRunningProcessInformation9+@ohos.app.ability.appManager (appManager) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 appManager模块提供App管理的能力，包括查询当前是否处于稳定性测试场景、查询是否为ram受限设备、获取应用程序的内存大小、获取有关运行进程的信息等。 
说明
本模块首批接口从API version 9 开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import appManager from '@ohos.app.ability.appManager';  appManager.isRunningInStabilityTeststatic isRunningInStabilityTest(callback: AsyncCallback<boolean>): void 查询当前是否处于稳定性测试场景。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  AsyncCallback<boolean>  以回调方式返回接口运行结果及当前是否处于稳定性测试场景，可进行错误处理或其他自定义处理。true: 处于稳定性测试场景，false：处于非稳定性测试场景。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.isRunningInStabilityTest((err, flag) => {    if (err.code !== 0) {        console.log('isRunningInStabilityTest faile, err: ' + JSON.stringify(err));    } else {        console.log('The result of isRunningInStabilityTest is:' + JSON.stringify(flag));    }});  appManager.isRunningInStabilityTeststatic isRunningInStabilityTest(): Promise<boolean> 查询当前是否处于稳定性测试场景。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<boolean>  以Promise方式返回接口运行结果及当前是否处于稳定性测试场景，可进行错误处理或其他自定义处理。true: 处于稳定性测试场景，false：处于非稳定性测试场景。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.isRunningInStabilityTest().then((flag) => {    console.log('The result of isRunningInStabilityTest is:' + JSON.stringify(flag));}).catch((error) => {    console.log('error:' + JSON.stringify(error));});  appManager.isRamConstrainedDeviceisRamConstrainedDevice(): Promise<boolean>; 查询是否为ram受限设备。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<boolean>  以Promise方式返回接口运行结果及当前设备是否为ram受限设备，可进行错误处理或其他自定义处理。true：当前设备为ram受限设备，false：当前设备为非ram受限设备。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.isRamConstrainedDevice().then((data) => {    console.log('The result of isRamConstrainedDevice is:' + JSON.stringify(data));}).catch((error) => {    console.log('error:' + JSON.stringify(error));});  appManager.isRamConstrainedDeviceisRamConstrainedDevice(callback: AsyncCallback<boolean>): void; 查询是否为ram受限设备。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  AsyncCallback<boolean>  以回调方式返回接口运行结果及当前设备是否为ram受限设备，可进行错误处理或其他自定义处理。true：当前设备为ram受限设备，false：当前设备为非ram受限设备。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.isRamConstrainedDevice((err, data) => {    if (err.code !== 0) {        console.log('isRamConstrainedDevice faile, err: ' + JSON.stringify(err));    } else {        console.log('The result of isRamConstrainedDevice is:' + JSON.stringify(data));    }});  appManager.getAppMemorySizegetAppMemorySize(): Promise<number>; 获取应用程序的内存大小。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<number>  以Promise方式返回接口运行结果及应用程序内存大小，可进行错误处理或其他自定义处理。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.getAppMemorySize().then((data) => {    console.log('The size of app memory is:' + JSON.stringify(data));}).catch((error) => {    console.log('error:' + JSON.stringify(error));});  appManager.getAppMemorySizegetAppMemorySize(callback: AsyncCallback<number>): void; 获取应用程序的内存大小。 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  AsyncCallback<number>  以回调方式返回接口运行结果及应用程序内存大小，可进行错误处理或其他自定义处理。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.getAppMemorySize((err, data) => {    if (err.code !== 0) {        console.log('getAppMemorySize faile, err: ' + JSON.stringify(err));    } else {        console.log('The size of app memory is:' + JSON.stringify(data));    }});  appManager.getRunningProcessInformationgetRunningProcessInformation(): Promise<Array<ProcessInformation>>; 获取有关运行进程的信息。 需要权限：ohos.permission.GET_RUNNING_INFO 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  Promise<Array<ProcessInformation>>  以Promise方式返回接口运行结果及有关运行进程的信息，可进行错误处理或其他自定义处理。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.getRunningProcessInformation().then((data) => {    console.log('The running process information is:' + JSON.stringify(data));}).catch((error) => {    console.log('error:' + JSON.stringify(error));});  appManager.getRunningProcessInformation9+getRunningProcessInformation(callback: AsyncCallback<Array<ProcessInformation>>): void; 获取有关运行进程的信息。 需要权限：ohos.permission.GET_RUNNING_INFO 系统能力：SystemCapability.Ability.AbilityRuntime.Core 返回值：  类型  说明  AsyncCallback<Array<ProcessInformation>>  以回调方式返回接口运行结果及有关运行进程的信息，可进行错误处理或其他自定义处理。     错误码：  错误码ID  错误信息  16000050  Internal error.     以上错误码详细介绍请参考errcode-ability。 示例： 已复制import appManager from '@ohos.app.ability.appManager';
appManager.getRunningProcessInformation((err, data) => {    if (err.code !== 0) {        console.log('getRunningProcessInformation faile, err: ' + JSON.stringify(err));    } else {        console.log('The process running information is:' + JSON.stringify(data));    }});   上一篇 @ohos.app.ability.abilityDelegatorRegistry (AbilityDelegatorRegistry) 下一篇 @ohos.app.ability.appRecovery (appRecovery) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。