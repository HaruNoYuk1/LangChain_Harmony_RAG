您正在浏览HarmonyOS开发者3.1/4.0版本配套的开发者文档，对应API能力级别为API 9 Release，详细版本配套关系请参考版本说明。导入模块TreeMap属性constructorisEmptyhasKeyhasValuegetgetFirstKeygetLastKeysetAllsetremovegetLowerKeygetHigherKeyreplaceclearkeysvaluesforEachentries[Symbol.iterator]@ohos.util.TreeMap (非线性容器TreeMap) 更新时间: 2024-03-18 17:33 毫无帮助帮助不大一般很好非常好
分享
 TreeMap可用于存储具有关联关系的key-value键值对集合，存储元素中key值唯一，每个key对应一个value。 TreeMap底层使用红黑树实现，可以利用二叉树特性快速查找键值对。key值有序存储，可以实现快速的插入和删除。 TreeMap和HashMap相比，HashMap依据键的hashCode存取数据，访问速度较快。而TreeMap是有序存取，效率较低。 推荐使用场景： 一般需要存储有序键值对的场景，可以使用TreeMap。 文档中存在泛型的使用，涉及以下泛型标记符: K: Key, 键 V: Value, 值  
说明
本模块首批接口从API version 8开始支持。后续版本的新增接口，采用上角标单独标记接口的起始版本。 
 导入模块已复制import TreeMap from '@ohos.util.TreeMap';    TreeMap 属性系统能力： SystemCapability.Utils.Lang 名称  类型  可读  可写  说明    length  number  是  否  TreeMap的元素个数。      constructorconstructor(comparator?:(firstValue: K, secondValue: K) => boolean) TreeMap的构造函数，支持通过比较函数对元素进行升序或降序排序。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    comparator  function  否  用户自定义的比较函数，可通过比较关系对元素进行排序。默认值为hole（一个空白占位符），表示不提供比较函数。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200012  The TreeMap's constructor cannot be directly invoked.     示例： 已复制let treeMap = new TreeMap();//使用comparator firstValue < secondValue，表示期望结果为升序排序。反之firstValue > secondValue，表示为降序排序。let treeMap : TreeMap<string,string> = new TreeMap<string,string>((firstValue: string, secondValue: string) : boolean => {return firstValue > secondValue});treeMap.set("aa","3");treeMap.set("dd","1");treeMap.set("cc","2");treeMap.set("bb","4");let numbers = Array.from(treeMap.keys())for (let item of numbers) {  console.log("treeMap:" + item);}  isEmptyisEmpty(): boolean 判断该容器是否为空。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  boolean  为空返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The isEmpty method cannot be bound.     示例： 已复制const treeMap = new TreeMap();let result = treeMap.isEmpty();  hasKeyhasKey(key: K): boolean 判断此容器中是否含有该指定key。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  K  是  指定key     返回值：  类型  说明  boolean  包含指定key返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The hasKey method cannot be bound.     示例： 已复制let treeMap = new TreeMap();let result = treeMap.hasKey("squirrel");treeMap.set("squirrel", 123);let result1 = treeMap.hasKey("squirrel");  hasValuehasValue(value: V): boolean 判断此容器中是否含有该指定value。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    value  V  是  指定value。     返回值：  类型  说明  boolean  包含指定元素返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The hasValue method cannot be bound.     示例： 已复制let treeMap = new TreeMap();let result = treeMap.hasValue(123);treeMap.set("squirrel", 123);let result1 = treeMap.hasValue(123);  getget(key: K): V 获取指定key所对应的value，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  K  是  指定key。     返回值：  类型  说明  V  返回key映射的value值，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The get method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);let result = treeMap.get("sparrow");  getFirstKeygetFirstKey(): K 获取容器中排序第一的key，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  K  返回排序第一的key，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getFirstKey method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);let result = treeMap.getFirstKey();  getLastKeygetLastKey(): K 获取容器中排序最后的key，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  K  返回排序最后的key，为空时返回undefined     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getLastKey method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);let result = treeMap.getLastKey();  setAllsetAll(map: TreeMap<K, V>): void 将一个TreeMap中的所有元素组添加到另一个TreeMap中。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    map  TreeMap<K, V>  是  该map会添加到其调用setAll接口的map对象中。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The setAll method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);let map = new TreeMap();map.set("demo", 12);map.setAll(treeMap); // 将treeMap中的所有元素添加到map中map.forEach((value, key) => {    console.log("value" + value, "key" + key); // 打印结果 12 demo、356 sparrow、123 squirrel})  setset(key: K, value: V): Object 向容器中添加一组数据。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  K  是  添加成员数据的键名。   value  V  是  添加成员数据的值。     返回值：  类型  说明  Object  返回添加后的treeMap     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The set method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);  removeremove(key: K): V 删除指定key对应的元素。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  K  是  指定key。     返回值：  类型  说明  V  返回删除元素的值。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The remove method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);treeMap.remove("sparrow");  getLowerKeygetLowerKey(key: K): K 获取容器中等于key或者比传入key排序靠前一位的key，为空时返回undefined。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  K  是  对比的key值。     返回值：  类型  说明  K  返回排序中key前一位的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getLowerKey method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);treeMap.set("gander", 356);let result = treeMap.getLowerKey("sparrow");  getHigherKeygetHigherKey(key: K): K 获取容器中等于key或者比传入key排序靠后一位的key，为空时返回undefined。。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  K  是  对比的key值。     返回值：  类型  说明  K  返回排序中key后一位的数据，为空时返回undefined。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The getHigherKey method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);treeMap.set("gander", 356);let result = treeMap.getHigherKey("sparrow");  replacereplace(key: K, newValue: V): boolean 对容器中一组数据进行更新（替换）。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    key  K  是  指定key。   newValue  V  是  替换的元素。     返回值：  类型  说明  boolean  对指定key对应的元素替换成功返回true，否则返回false。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The replace method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("sparrow", 123);let result = treeMap.replace("sparrow", 357);  clearclear(): void 清除容器中的所有元素，并把length置为0。 系统能力： SystemCapability.Utils.Lang 错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The clear method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);treeMap.clear();  keyskeys(): IterableIterator<K> 返回包含此映射中包含的键的新迭代器对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<K>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The keys method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);let iter = treeMap.keys();let temp = iter.next().value;while(temp != undefined) {  console.log("value:" + temp);  temp = iter.next().value;}  valuesvalues(): IterableIterator<V> 返回包含此映射中键值的新迭代器对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<V>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The values method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);let iter = treeMap.values();let temp = iter.next().value;while(temp != undefined) {  console.log("value:" + temp);  temp = iter.next().value;}  forEachforEach(callbackFn: (value?: V, key?: K, map?: TreeMap<K, V>) => void, thisArg?: Object): void 通过回调函数来遍历实例对象上的元素以及元素对应的下标。 系统能力： SystemCapability.Utils.Lang 参数： 参数名  类型  必填  说明    callbackFn  function  是  回调函数。   thisArg  Object  否  callbackFn被调用时用作this值。     callbackFn的参数说明： 参数名  类型  必填  说明    value  V  否  当前遍历到的元素键值对的值。   key  K  否  当前遍历到的元素键值对的键。   map  TreeMap<K, V>  否  当前调用forEach方法的实例对象。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The forEach method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("sparrow", 123);treeMap.set("gull", 357);treeMap.forEach((value, key) => {    console.log("value:" + value, "key:" + key);});  entriesentries(): IterableIterator<[K, V]> 返回包含此映射中键值对的新迭代器对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<[K, V]>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The entries method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356);let iter = treeMap.entries();let temp = iter.next().value;while(temp != undefined) {  console.log("key:" + temp[0]);  console.log("value:" + temp[1]);  temp = iter.next().value;}  [Symbol.iterator][Symbol.iterator](): IterableIterator<[K, V]> 返回一个迭代器，迭代器的每一项都是一个JavaScript对象，并返回该对象。 系统能力： SystemCapability.Utils.Lang 返回值：  类型  说明  IterableIterator<[K, V]>  返回一个迭代器。     错误码： 以下错误码的详细介绍请参见语言基础类库错误码。  错误码ID  错误信息  10200011  The Symbol.iterator method cannot be bound.     示例： 已复制let treeMap = new TreeMap();treeMap.set("squirrel", 123);treeMap.set("sparrow", 356); // 使用方法一：for (let item of treeMap) {    console.log("key:" + item[0]);  console.log("value:" + item[1]);} // 使用方法二：let iter = treeMap[Symbol.iterator]();let temp: IteratorResult<Object[]> = iter.next();while(!temp.done) {  console.log("key:" + temp.value[0]);  console.log("value:" + temp.value[1]);  temp = iter.next();}   上一篇 @ohos.util.Stack (线性容器Stack) 下一篇 @ohos.util.TreeSet (非线性容器TreeSet) 以上内容对您是否有帮助？毫无帮助帮助不大一般很好非常好意见反馈
更多帮助请到“社区论坛”，如需要其他帮助，请通过“智能客服”提问。